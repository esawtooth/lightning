[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "lightning-core"
version = "0.1.0"
description = "Lightning Core - AI Planning and Operating System Library"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Lightning Team", email = "team@lightning.ai"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    "pydantic>=2.0.0",
    "openai>=1.0.0",
    "asyncio-mqtt>=0.13.0",
    "aiohttp>=3.8.0",
    "jsonschema>=4.0.0",
    "croniter>=1.3.0",
    "python-dateutil>=2.8.0",
    "typing-extensions>=4.0.0",
    "pm4py>=2.7.0",
    "aiosqlite>=0.19.0",  # For local storage
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
local = [
    "docker>=6.0.0",  # For local container runtime
    "aiosqlite>=0.19.0",  # For local storage
    "aiofiles>=23.0.0",  # For local file operations
    "redis>=5.0.0",  # For Redis event bus
    "uvicorn[standard]>=0.24.0",  # For running FastAPI with WebSocket support
    "fastapi>=0.104.0",  # For API server
    "websockets>=12.0",  # For WebSocket support
    "httpx>=0.25.0",  # For HTTP client in API proxying
]
azure = [
    "azure-cosmos>=4.5.0",
    "azure-servicebus>=7.11.0",
    "azure-mgmt-containerinstance>=10.0.0",
    "azure-functions>=1.17.0",
    "azure-identity>=1.14.0",
]
aws = [
    "boto3>=1.28.0",
    "aioboto3>=11.0.0",
]
gcp = [
    "google-cloud-firestore>=2.11.0",
    "google-cloud-pubsub>=2.18.0",
    "google-cloud-run>=0.9.0",
    "google-cloud-functions>=1.13.0",
]
visualization = [
    "graphviz>=0.20.0",
]
petri = [
    "pm4py>=2.7.0",
    "networkx>=3.0.0",
]
email = [
    "google-auth>=2.0.0",
    "google-auth-oauthlib>=1.0.0",
    "google-auth-httplib2>=0.1.0",
    "google-api-python-client>=2.0.0",
    "exchangelib>=5.0.0",
]
calendar = [
    "google-auth>=2.0.0",
    "google-auth-oauthlib>=1.0.0",
    "google-auth-httplib2>=0.1.0",
    "google-api-python-client>=2.0.0",
    "exchangelib>=5.0.0",
]
messaging = [
    "slack-sdk>=3.0.0",
    "twilio>=8.0.0",
    "requests>=2.28.0",
]
all = [
    "lightning-core[dev,local,azure,aws,gcp,petri,email,calendar,messaging,visualization]"
]

[project.scripts]
lightning-planner = "lightning_core.planner.cli:main"
vextir-processor = "lightning_core.vextir_os.cli:main"

[project.urls]
Homepage = "https://github.com/lightning-ai/lightning-core"
Documentation = "https://lightning-core.readthedocs.io"
Repository = "https://github.com/lightning-ai/lightning-core"
Issues = "https://github.com/lightning-ai/lightning-core/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["lightning_core*"]

[tool.setuptools.package-data]
"lightning_core.planner" = ["*.json"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["lightning_core"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
